{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/login/Login.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","FormControl","input","meta","props","child","hasError","touched","error","className","styles","formControl","children","Textarea","restProps","Input","createField","placeholder","name","validators","component","text","validate","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","type","formSummaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,iCCD3H,oEAAO,IAAMC,EAAW,SAAAC,GACpB,IAAIA,EAEJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,+LCH5BE,EAAc,SAAC,GAAqC,EAAnCC,MAAoC,IAA7BC,EAA4B,EAA5BA,KAAgBC,GAAY,EAAtBC,MAAsB,yCAChDC,EAAWH,EAAKI,SAAWJ,EAAKK,MACtC,OACI,yBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAWI,IAAOF,MAAQ,KAClE,6BACKJ,EAAMQ,UAETN,GAAY,kCAAQH,EAAKK,MAAb,OAIbK,EAAW,SAACT,GAAW,IACxBF,EAAqCE,EAArCF,MAAuBY,GAAcV,EAA9BD,KAA8BC,EAAxBC,MADU,YACcD,EADd,2BAE/B,OACI,kBAACH,EAAgBG,EAAQ,8CAAcF,EAAWY,MAG7CC,EAAQ,SAACX,GAAW,IACrBF,EAAqCE,EAArCF,MAAuBY,GAAcV,EAA9BD,KAA8BC,EAAxBC,MADO,YACiBD,EADjB,2BAE5B,OACI,kBAACH,EAAgBG,EAAQ,2CAAWF,EAAWY,MAI1CE,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAhC,IAA2ChB,EAA3C,uDAAmD,GAAIiB,EAAvD,uDAA8D,GAA9D,OACvB,6BACI,kBAAC,IAAD,eAAOJ,YAAaA,EAAaC,KAAMA,EAAMI,SAAUH,EAAYC,UAAWA,GAAehB,IAAUiB,K,iCC9B/G,+FA4BME,EAAiBC,YAAU,CAC7BC,KAAM,SADaD,EAnBL,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,aAAclB,EAAY,EAAZA,MAE/B,OACI,0BAAMmB,SAAUD,GACXV,YAAY,QAAS,QAAS,CAACpB,KAAWmB,KAC1CC,YAAY,WAAY,WAAY,CAACpB,KAAWmB,IAAO,CAAEa,KAAM,aAC/DZ,YAAY,KAAM,aAAc,GAAID,IAAO,CAAEa,KAAM,YAAc,eAEjEpB,GAAS,yBAAKC,UAAWC,IAAOmB,kBAC5BrB,GAGL,6BACI,8CA2BDsB,uBAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGiB,CAAEE,WAA3BJ,EAjBD,SAAC1B,GAIX,OAAIA,EAAM4B,OACC,kBAAC,IAAD,CAAUG,GAAI,aAElB,6BACH,qCACA,kBAACZ,EAAD,CAAgBI,SARH,SAACS,GACdhC,EAAM8B,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.708be55a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3BXei\",\"error\":\"FormsControls_error__20QsI\",\"formSummaryError\":\"FormsControls_formSummaryError__B4cbn\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport styles from './FormsControls.module.css'\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")} >\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            { hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    )\r\n}\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return (\r\n        <FormControl {...props} ><textarea {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return (\r\n        <FormControl {...props} ><input {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props} />{text}\r\n    </div>\r\n);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm } from 'redux-form';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { createField, Input } from '../common/FormsControls/FormsControls';\r\nimport { login } from '../../redux/auth-reducer'\r\nimport { Redirect } from 'react-router-dom';\r\nimport styles from './../common/FormsControls/FormsControls.module.css'\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n            {createField(null, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"remember me\")}\r\n\r\n            {error && <div className={styles.formSummaryError} >\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);"],"sourceRoot":""}