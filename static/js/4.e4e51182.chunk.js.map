{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","img/user.png","components/Profile/Profileinfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profileinfo/ProfileStatusWithHooks.jsx","components/Profile/Profileinfo/ProfileDataForm.jsx","components/Profile/Profileinfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/Profileinfo/ProfileContainer.jsx"],"names":["FormControl","input","meta","props","child","hasError","touched","error","className","styles","formControl","children","Textarea","restProps","Input","createField","placeholder","name","validators","component","text","validate","module","exports","required","value","maxLengthCreator","maxLength","length","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","onSubmit","s","formSummaryError","type","contact","keys","contacts","map","key","ProfileData","isOwner","goToEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","content","main","src","photos","large","photoUser","mainPhoto","alt","target","files","initialValues","formData","then","Post","item","message","like","maxLength10","MyPosts","React","memo","postsElement","posts","p","id","likesCount","postsBlock","PostReduxForm","values","addPost","newPostText","post","Field","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","getProfile","getStatus","refreshProfile","prevProps","Component","compose","withRouter","auth","isAuth"],"mappings":"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","file":"static/js/4.e4e51182.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport styles from './FormsControls.module.css'\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")} >\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            { hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    )\r\n}\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return (\r\n        <FormControl {...props} ><textarea {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return (\r\n        <FormControl {...props} ><input {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props} />{text}\r\n    </div>\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3BXei\",\"error\":\"FormsControls_error__20QsI\",\"formSummaryError\":\"FormsControls_formSummaryError__B4cbn\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = __webpack_public_path__ + \"static/media/user.a3a35b22.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__2Krg6\",\"avatar\":\"ProfileInfo_avatar__2bWhY\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2Tjad\",\"contact\":\"ProfileInfo_contact__WV7rU\",\"formSummaryError\":\"ProfileInfo_formSummaryError__1hPhK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__fIbUC\",\"posts\":\"MyPosts_posts__i9eUi\",\"post\":\"MyPosts_post__ec6Ql\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3CWW5\"};","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status])\r\n\r\n  let activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  let deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  let onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      { !editMode &&\r\n        <div> <b>Status:</b>\r\n          <span onDoubleClick={activateEditMode} > {props.status || \"No status\"} </span>\r\n        </div>\r\n      }\r\n      {editMode &&\r\n        <div>\r\n          <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit} >\r\n       <div>\r\n        <button>Save</button>\r\n      </div>\r\n      {error && <div className={s.formSummaryError} >\r\n        {error}\r\n      </div>}\r\n      <div>\r\n        <b>Full name: \r\n          {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </b>\r\n      </div>\r\n      <div><b>Looking  for a job</b>{createField(null, \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n      </div>\r\n      <div><b>Job status</b>: \r\n        {createField(\"My proffesionall skils\", \"lookingForAJobDescription\", [], Textarea)}\r\n      </div>\r\n      <div><b>About me</b>: \r\n        {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n      </div>\r\n      <div><b>Contacts</b>:</div>\r\n      <div className={s.contact} >{Object.keys(profile.contacts).map(key => {\r\n        return( \r\n        <div>{key}: {createField(key, \"contacts.\" +key, [], Input)}</div>)\r\n      })}\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-pdofile' })(ProfileDataForm)\r\n\r\n\r\n\r\nexport default ProfileDataFormReduxForm;","import React from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport photoUser from '../../../img/user.png';\r\nimport { useState } from 'react';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({ isOwner, profile, status, updateStatus, savePhoto, saveProfile }) => {\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(\r\n      () => {\r\n        setEditMode(false);\r\n      }\r\n    )\r\n  }\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <div className={s.content}>\r\n      </div>\r\n      <div className={s.main}>\r\n        <div>\r\n          <img src={profile.photos.large || photoUser} className={s.mainPhoto} alt=' ' />\r\n        </div>\r\n        <div>\r\n          {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n        </div>\r\n      </div>\r\n      { editMode\r\n        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n        : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n\r\n  return (\r\n    <div>\r\n      {isOwner && <button onClick={goToEditMode} >edit</button>}\r\n      <div>\r\n        <b>Full name: {profile.fullName}</b>\r\n      </div>\r\n      <div><b>About me</b>: {profile.aboutMe} </div>\r\n\r\n      <div><b>Looking  for a job</b>: {profile.lookingForAJob ? \"Yes\" : \"No\"} </div>\r\n      <div><b>Job status</b>: {profile.lookingForAJobDescription} </div>\r\n      <div><b>Contacts</b>:</div>\r\n      <div className={s.contact} >{Object.keys(profile.contacts).map(key => {\r\n        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n      })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return <div> <b> {contactTitle} </b>: {contactValue} </div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return(\r\n      <div className={s.item}>\r\n        <div>\r\n        <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRBeh9p2Q2aNTph1AFnDCsJ2i6J2H_RTikJLw&usqp=CAU' alt='avatar' />\r\n        </div>\r\n        {props.message}\r\n        <div>\r\n        <span>{props.like} like</span>\r\n        </div>\r\n      </div>\r\n      \r\n  )\r\n}\r\n\r\nexport default Post ;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo(props => {\r\n  // Данные две строки выводит в консоль слово RENDER и  то что сидит в props`ах\r\n  // console.log('RENDER');\r\n  //   console.log(props)\r\n\r\n  let postsElement = props.posts.map(p => <Post key={p.id} message={p.message} like={p.likesCount} />);\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <PostReduxForm onSubmit={addNewPost} />\r\n      <div className={s.post}>\r\n        {postsElement}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nconst AddPostForm = props => {\r\n\r\n  return <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      <Field placeholder={\"Add post\"} name={\"newPostText\"} component={Textarea} \r\n      validate={ [required, maxLength10] }  />\r\n    </div>\r\n    <div>\r\n      <button>Send</button>\r\n    </div>\r\n  </form>\r\n}\r\n\r\nconst PostReduxForm = reduxForm({\r\n  form: 'postForm'\r\n})(AddPostForm)\r\n\r\nexport default MyPosts;","import { addPostActionCreator } from '../../../redux/profile-reducer'\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\n// import s from './Profile.module.css';\r\nimport ProfileInfo from './Profileinfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = ({ isOwner, profile, status, updateStatus, savePhoto, saveProfile }) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        savePhoto={savePhoto}\r\n        isOwner={isOwner}\r\n        profile={profile}\r\n        status={status}\r\n        updateStatus={updateStatus}\r\n        saveProfile={saveProfile} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from '../Profile';\r\nimport { getProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n    this.props.getProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Profile {...this.props}\r\n        // двойное отрицание которое приведет значение  (псевдоистинну) в булевое значение\r\n        // если id присутствует то в конце покажет кнопку загрузить файл \r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto} \r\n        />\r\n    )\r\n  }\r\n}\r\nlet mapStateToProsp = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProsp, { getProfile, getStatus, updateStatus, savePhoto, saveProfile })\r\n)(ProfileContainer)"],"sourceRoot":""}