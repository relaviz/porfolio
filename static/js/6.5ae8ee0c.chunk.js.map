{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/MessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["FormControl","input","meta","props","child","hasError","touched","error","className","styles","formControl","children","Textarea","restProps","Input","createField","placeholder","name","validators","component","text","validate","module","exports","required","value","maxLengthCreator","maxLength","length","Message","message","s","DialogsItem","id","path","dialog","active","to","activeClassName","maxLength100","reduxForm","form","handleSubmit","onSubmit","Field","Dialogs","dialogsPage","sendMessage","state","dialogsElements","dialogs","map","d","key","messagesElement","messages","m","dialogsItems","values","newMessageText","mapStateToProspForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","withRouter","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/6.5ae8ee0c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport styles from './FormsControls.module.css'\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")} >\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            { hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    )\r\n}\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return (\r\n        <FormControl {...props} ><textarea {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return (\r\n        <FormControl {...props} ><input {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props} />{text}\r\n    </div>\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3BXei\",\"error\":\"FormsControls_error__20QsI\",\"formSummaryError\":\"FormsControls_formSummaryError__B4cbn\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1autY\",\"dialogsItems\":\"Dialogs_dialogsItems__2M9xC\",\"dialog\":\"Dialogs_dialog__jqd-P\",\"active\":\"Dialogs_active__wgL9A\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = ({ message }) => {\r\n  return (\r\n    <div className={s.message}>{message}</div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogsItem = ({ id, name }) => {\r\n  let path = '/dialogs/' + id\r\n  return (\r\n    <div className={s.dialog + ' ' + s.active}>\r\n      <NavLink to={path} activeClassName={s.active}>{name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogsItem;","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators'\r\nimport { Textarea } from '../common/FormsControls/FormsControls'\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst AddMessageForm = ({handleSubmit}) => {\r\n\r\n  return <form onSubmit={handleSubmit}>\r\n    <div>\r\n      <Field placeholder={\"Enter message\"} name={\"newMessageText\"} validate={[required, maxLength100]} component={Textarea}  />\r\n    </div>\r\n    <div>\r\n      <button>Send</button>\r\n    </div>\r\n  </form>\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'messageForm'\r\n})(AddMessageForm)","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport DialogsItem from './DialogsItem/DialogsItem';\r\nimport AddMessageForm from './MessageForm'\r\n\r\n\r\nconst Dialogs = ({ dialogsPage, sendMessage }) => {\r\n\r\n  let state = dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map(d => <DialogsItem name={d.name} key={d.id} id={d.id} />);\r\n  let messagesElement = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\r\n  let addNewMessage = (values) => {\r\n    sendMessage(values.newMessageText)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.dialogs}>\r\n        <div className={s.dialogsItems}>\r\n          {dialogsElements}\r\n        </div>\r\n        <div className={s.messages}>\r\n          <div>{messagesElement}</div>\r\n          <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nlet mapStateToProspForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProspForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      sendMessage: (newMessageText) => {\r\n      dispatch(sendMessageCreator(newMessageText))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose (\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}