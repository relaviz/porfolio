{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/Profileinfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profileinfo/ProfileStatusWithHooks.jsx","components/Profile/Profileinfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/Profileinfo/ProfileContainer.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","FormControl","input","meta","props","child","hasError","touched","error","className","styles","formControl","children","Textarea","restProps","Input","createField","placeholder","name","validators","component","text","validate","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","s","content","avatar","src","alt","aboutMe","fullName","lookingForAJobDescription","Preloader","Post","item","message","like","maxLength10","MyPosts","React","memo","postsElement","posts","map","p","likesCount","postsBlock","PostReduxForm","onSubmit","values","addPost","newPostText","post","reduxForm","form","handleSubmit","Field","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","getProfile","getStatus","Component","compose","withRouter","auth","isAuth"],"mappings":"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","file":"static/js/4.f6615b3f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3BXei\",\"error\":\"FormsControls_error__20QsI\",\"formSummaryError\":\"FormsControls_formSummaryError__B4cbn\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport styles from './FormsControls.module.css'\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")} >\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            { hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    )\r\n}\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return (\r\n        <FormControl {...props} ><textarea {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return (\r\n        <FormControl {...props} ><input {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props} />{text}\r\n    </div>\r\n);","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__2Krg6\",\"avatar\":\"ProfileInfo_avatar__2bWhY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__fIbUC\",\"posts\":\"MyPosts_posts__i9eUi\",\"post\":\"MyPosts_post__ec6Ql\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3CWW5\"};","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status])\r\n\r\n  let activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  let deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  let onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      { !editMode &&\r\n        <div>\r\n          <span onDoubleClick={activateEditMode} > {props.status || \"No status\"} </span>\r\n        </div>\r\n      }\r\n      {editMode &&\r\n        <div>\r\n          <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n\r\n    <div>\r\n      <div className={s.content}>\r\n      </div>\r\n      <div className={s.avatar}>\r\n        <img src='https://ak.picdn.net/shutterstock/videos/1021270852/thumb/1.jpg' alt=' ' />\r\n      </div>\r\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      <div>About me: {profile.aboutMe} </div>\r\n      <div>Name: {profile.fullName} </div>\r\n      <div>Job status: {profile.lookingForAJobDescription} </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return(\r\n      <div className={s.item}>\r\n        <div>\r\n        <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRBeh9p2Q2aNTph1AFnDCsJ2i6J2H_RTikJLw&usqp=CAU' alt='avatar' />\r\n        </div>\r\n        {props.message}\r\n        <div>\r\n        <span>{props.like} like</span>\r\n        </div>\r\n      </div>\r\n      \r\n  )\r\n}\r\n\r\nexport default Post ;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo(props => {\r\n  // Данные две строки выводит в консоль слово RENDER и  то что сидит в props`ах\r\n  // console.log('RENDER');\r\n  //   console.log(props)\r\n\r\n  let postsElement = props.posts.map(p => <Post message={p.message} like={p.likesCount} />);\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <PostReduxForm onSubmit={addNewPost} />\r\n      <div className={s.post}>\r\n        {postsElement}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nconst AddPostForm = props => {\r\n\r\n  return <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      <Field placeholder={\"Add post\"} name={\"newPostText\"} component={Textarea} \r\n      validate={ [required, maxLength10] }  />\r\n    </div>\r\n    <div>\r\n      <button>Send</button>\r\n    </div>\r\n  </form>\r\n}\r\n\r\nconst PostReduxForm = reduxForm({\r\n  form: 'postForm'\r\n})(AddPostForm)\r\n\r\nexport default MyPosts;","import { addPostActionCreator } from '../../../redux/profile-reducer'\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\n// import s from './Profile.module.css';\r\nimport ProfileInfo from './Profileinfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = ({ profile, status, updateStatus }) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={profile} status={status} updateStatus={updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from '../Profile';\r\nimport { getProfile, getStatus, updateStatus } from '../../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n    this.props.getProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Profile {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus} />\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProsp = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProsp, { getProfile, getStatus, updateStatus })\r\n  )(ProfileContainer)"],"sourceRoot":""}