{"version":3,"sources":["components/api/api.js","serviceWorker.js","components/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","redux/auth-reducer.js","components/Header/Header.module.css","components/common/preloader/Preloader.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/news-reducer.js","components/Navbar/Navbar.module.css","utils/object-helpers.js","redux/users-reducer.js","img/loading5.gif","components/common/preloader/Preloader.module.css"],"names":["instance","Axios","create","withCredentials","baseURL","headers","usersApi","getUsers","currentPage","pageSize","get","then","response","data","unfollow","userId","delete","follow","post","getProfile","profileApi","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authApi","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Navbar","props","className","s","nav","item","to","activeClassName","active","itemFriends","Header","isAuth","header","src","alt","loginBlock","onClick","HeaderContainer","this","React","Component","connect","state","auth","initialState","initialized","appReducer","action","type","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","newsPage","newsReducer","usersPage","usersReducer","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","fallback","ProfileContainer","lazy","UsersContainer","DialogsContainer","Settings","NewsContainer","Music","Login","App","initializeApp","path","render","Preloader","AppContainer","withRouter","dispatch","a","promise","getAuthUserData","Promise","all","MainApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","id","setUser","payload","resultCode","messages","length","stopSubmit","_error","module","exports","center","preload","posts","likesCount","addPostActionCreator","newPostText","setStatus","file","photos","getState","reject","filter","p","postId","dialogs","name","sendMessageCreator","newMessageText","body","news","newsMessage","newNewsBody","sendNewsCreator","updateNewNewsBodyCreator","updateObjectArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","tooggleIsFetching","tooggleFollowignProgress","requestUsers","page","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","followed"],"mappings":"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","file":"static/js/main.15d86460.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst instance = Axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: { \"API-KEY\": \"d1bfeb32-8e07-459b-ad60-554fb030c05d\" }\r\n})\r\n\r\nexport const usersApi = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    getProfile(userId) {\r\n        return profileApi.getProfile(userId);\r\n    }\r\n}\r\nexport const profileApi = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, { status })\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo/`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n}\r\n\r\nexport const authApi = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n// import Friends from './Sidebar/Sidebar';\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n        <NavLink to='/profile' activeClassName={s.active} >Profile </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/dialogs' activeClassName={s.active}>Mesagges</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/news' activeClassName={s.active}>News</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/music' activeClassName={s.active}>Music</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n      </div>\r\n      <div className={s.itemFriends}>\r\n        <div>\r\n          {/* <Friends state={props.state} /> */}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = ({ isAuth, login, logout }) => {\r\n\r\n  return <header className={s.header}>\r\n    <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/f/f9/Google_Lens_-_new_logo.png/600px-Google_Lens_-_new_logo.png' alt='' />\r\n    <div className={s.loginBlock}>\r\n      {isAuth\r\n        ? <div> {login} <button onClick={logout} >Logout</button> </div>\r\n        : <NavLink to={'/login'}>Login</NavLink>}\r\n    </div>\r\n  </header>\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer'\r\nimport Header from './Header';\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n\r\n","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    };\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    //dispatch(somethingelse());\r\n    //dispatch(somethingelse());\r\n    await Promise.all([promise])\r\n    dispatch(initializedSuccess())\r\n\r\n}\r\n\r\nexport default appReducer;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport newsReducer from './news-reducer';\r\nimport usersReducer from './users-reducer'\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    newsPage: newsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// applyMiddleware - для того что бы вклинится в код. Но так же нужно \r\n// за инсталировать \"npm i redux-thunk\"\r\n\r\nexport default store;","import React, { Suspense } from 'react'\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<div>Загрузка...</div>}>\r\n        <Component {...props} />\r\n      </Suspense> \r\n    };\r\n}","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport { BrowserRouter, Route, withRouter } from 'react-router-dom';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport { initializeApp } from './redux/app-reducer'\nimport { connect, Provider } from 'react-redux';\nimport { compose } from 'redux';\nimport Preloader from './components/common/preloader/Preloader';\nimport store from './redux/redux-store';\nimport { withSuspense } from './hoc/withSuspense';\n\nconst ProfileContainer = React.lazy(() => import('./components/Profile/Profileinfo/ProfileContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst Settings = React.lazy(() => import('./components/Settings/Settings'));\nconst NewsContainer = React.lazy(() => import('./components/News/NewsContainer'));\nconst Music = React.lazy(() => import('./components/Music/Music'));\nconst Login = React.lazy(() => import('./components//login/Login'));\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n  render() {\n\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n\n    return (\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\n          <Route path='/dialogs' render={withSuspense(DialogsContainer)} />\n          <Route path='/news' render={withSuspense(NewsContainer)} />\n          <Route path='/music' render={withSuspense(Music)}/>\n          <Route path='/settings' render={withSuspense(Settings)}/>\n          <Route path='/users' render={withSuspense(UsersContainer)}/>\n          <Route path='/login' render={withSuspense(Login)} />\n\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp }))(App);\n\nconst MainApp = (props) => {\n  return <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </BrowserRouter>\n}\n\nexport default MainApp;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\n\nReactDOM.render(<MainApp />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { stopSubmit } from \"redux-form\";\r\nimport { authApi } from \"../components/api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    };\r\n}\r\n\r\nexport const setUser = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload: { userId, email, login, isAuth }\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authApi.me();\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data;\r\n        dispatch(setUser(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authApi.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authApi.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUser(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3RmRb\",\"loginBlock\":\"Header_loginBlock__oyoHf\"};","import React from 'react';\r\nimport preload from '../../../img/loading5.gif';\r\nimport s from './Preloader.module.css'\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div className={s.center}><img src={preload} alt='load' /></div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import { stopSubmit } from \"redux-form\";\r\nimport { profileApi, usersApi } from \"../components/api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\nconst UPDATE_PROFILE_SUCCESS = 'UPDATE_PROFILE_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'It`s my firts post', likesCount: 12 },\r\n        { id: 2, message: 'Hello world', likesCount: 20 },\r\n        { id: 3, message: 'How are you?', likesCount: 11 },\r\n        { id: 4, message: 'How are you? Hhoho', likesCount: 0 }\r\n    ],\r\n    profile: null,\r\n    status: \" \"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPostText = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPostText]\r\n\r\n            }\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, photos: action.photos }\r\n            }\r\n        }\r\n        case UPDATE_PROFILE_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    };\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText });\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId });\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\r\nexport const savePhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos });\r\nexport const updateProfileSuccess = (profile) => ({ type: UPDATE_PROFILE_SUCCESS, profile });\r\n\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n    let response = await usersApi.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileApi.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileApi.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await profileApi.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n\r\n    const userId = getState().auth.userId;\r\n    const response = await profileApi.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit( \"edit-pdofile\",  { _error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Valera' },\r\n        { id: 2, name: 'Anton' },\r\n        { id: 3, name: 'Slavik' },\r\n        { id: 4, name: 'Pasha' },\r\n        { id: 5, name: 'Evald' },\r\n        { id: 6, name: 'Andrew' },\r\n        { id: 7, name: 'Tomi' }\r\n    ],\r\n\r\n    messages: [\r\n        { id: 1, message: 'Yo' },\r\n        { id: 2, message: 'Hello world' },\r\n        { id: 3, message: 'How are you?' },\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageText;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 4, message: body }]\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageText) => ({\r\n    type: SEND_MESSAGE, newMessageText\r\n});\r\n\r\nexport default dialogsReducer;","const UPDATE_NEW_NEWS = 'UPDATE-NEW-NEWS';\r\nconst SEND_NEWS = 'SEND-NEWS';\r\n\r\nlet initialState = {\r\n    news: [\r\n        { id: 1, newsMessage: 'First new news' }\r\n    ],\r\n    newNewsBody: ''\r\n};\r\n\r\nconst newsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_NEWS: {\r\n            return {\r\n                ...state,\r\n                newNewsBody: action.news\r\n            }\r\n        }\r\n        case SEND_NEWS: {\r\n            let news = state.newNewsBody;\r\n            \r\n            return {\r\n                ...state,\r\n                news:  [...state.news, { id: 2, newsMessage: news }],\r\n                newNewsBody: ''\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendNewsCreator = () => ({\r\n    type: SEND_NEWS\r\n});\r\nexport const updateNewNewsBodyCreator = (news) => ({\r\n    type: UPDATE_NEW_NEWS, news: news\r\n});\r\n\r\nexport default newsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__34Uha\",\"item\":\"Navbar_item__39gyb\",\"active\":\"Navbar_active__2RzAm\",\"icon\":\"Navbar_icon__3sUdd\",\"iconItem\":\"Navbar_iconItem__2EVM3\"};","export const  updateObjectArray = (items, itemId, objPropName, newObjProps) => { \r\n    \r\n   return items.map(u => {\r\n    if (u[objPropName] === itemId) {\r\n        return { ...u, ...newObjProps}\r\n    }\r\n    return u;\r\n})\r\n}","import { usersApi } from \"../components/api/api\";\r\nimport { updateObjectArray } from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOOGGLE_IS_FETCHING = 'TOOGGLE_IS_FETCHING';\r\nconst TOOGGLE_IS_FOLLOWING_PROGRESS = 'TOOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectArray(state.users, action.userId, \"id\", {followed: false})\r\n\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return { ...u, followed: false }\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            }\r\n\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.totalUsersCount }\r\n        }\r\n        case TOOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    };\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount });\r\nexport const tooggleIsFetching = (isFetching) => ({ type: TOOGGLE_IS_FETCHING, isFetching });\r\nexport const tooggleFollowignProgress = (isFetching, userId) => ({ type: TOOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\r\n\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(tooggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    const response = await usersApi.getUsers(page, pageSize);\r\n\r\n    dispatch(tooggleIsFetching(false));\r\n    dispatch(setUsers(response.items));\r\n    dispatch(setTotalUsersCount(response.totalCount));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(tooggleFollowignProgress(true, userId));\r\n    const response = await apiMethod(userId);\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(tooggleFollowignProgress(false, userId));\r\n}\r\n\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersApi.follow.bind(userId), followSuccess);\r\n}\r\n\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersApi.unfollow.bind(userId), unfollowSuccess);\r\n}\r\n\r\n\r\n\r\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/loading5.1fd5be2e.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Preloader_center__ThGD-\"};"],"sourceRoot":""}